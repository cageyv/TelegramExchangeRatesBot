"""exchange_rates

Revision ID: 20190311151631
Revises: 20190306193447
Create Date: 2019-03-11 15:16:31.245365

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.orm.session import Session
from sqlalchemy.ext.declarative import declarative_base

from app.exchanges import BittrexExchange, BitfinexExchange, OpenExchangeRatesExchange

# revision identifiers, used by Alembic.
revision = '20190311151631'
down_revision = '20190306193447'
branch_labels = None
depends_on = None

Base = declarative_base()


class Exchange(Base):
    __tablename__ = 'exchanges'

    id = sa.Column(sa.Integer, primary_key=True)
    name = sa.Column(sa.Text, nullable=False, index=True)
    weight = sa.Column(sa.Integer, nullable=False)
    is_active = sa.Column(sa.Boolean, nullable=False)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exchanges',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.Text(), nullable=False),
                    sa.Column('weight', sa.Integer(), nullable=False),
                    sa.Column('is_active', sa.Boolean(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_exchanges_name'), 'exchanges', ['name'], unique=False)
    op.create_table('rates',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('exchange_id', sa.Integer(), nullable=False),
                    sa.Column('from_currency_id', sa.Integer(), nullable=False),
                    sa.Column('to_currency_id', sa.Integer(), nullable=False),
                    sa.Column('rate', sa.Numeric(precision=24, scale=12), nullable=False),
                    sa.Column('rate_open', sa.Numeric(precision=24, scale=12), nullable=True),
                    sa.Column('low24h', sa.Numeric(precision=24, scale=12), nullable=True),
                    sa.Column('high24h', sa.Numeric(precision=24, scale=12), nullable=True),
                    sa.Column('last_trade_at', sa.TIMESTAMP(), nullable=False),
                    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
                    sa.Column('modified_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
                    sa.ForeignKeyConstraint(['exchange_id'], ['exchanges.id'], ),
                    sa.ForeignKeyConstraint(['from_currency_id'], ['currencies.id'], ),
                    sa.ForeignKeyConstraint(['to_currency_id'], ['currencies.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('exchange_id', 'from_currency_id', 'to_currency_id')
                    )
    # ### end Alembic commands ###

    exchanges = [
        Exchange(name=BitfinexExchange.name, is_active=True, weight=30),
        Exchange(name=BittrexExchange.name, is_active=True, weight=20),
        Exchange(name=OpenExchangeRatesExchange.name, is_active=False, weight=10)
    ]
    session = Session(bind=op.get_bind())
    session.add_all(exchanges)
    session.flush()


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('rates')
    op.drop_index(op.f('ix_exchanges_name'), table_name='exchanges')
    op.drop_table('exchanges')
    # ### end Alembic commands ###
